# Generated by Django 2.1.7 on 2019-04-08 21:28

import django.core.validators
from django.db import migrations, models
import magatzem.models.container


class Migration(migrations.Migration):

    dependencies = [
        ('magatzem', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='container',
            name='SLA',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='container',
            name='hum_max',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='container',
            name='hum_min',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='container',
            name='limit',
            field=models.CharField(max_length=10, validators=[magatzem.models.container.validate_limit]),
        ),
        migrations.AlterField(
            model_name='container',
            name='producer_id',
            field=models.CharField(max_length=64, validators=[magatzem.models.container.validate_client]),
        ),
        migrations.AlterField(
            model_name='container',
            name='product_id',
            field=models.CharField(max_length=64, validators=[magatzem.models.container.validate_products]),
        ),
        migrations.AlterField(
            model_name='container',
            name='quantity',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999999)]),
        ),
        migrations.AlterField(
            model_name='container',
            name='temp_max',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(-999), django.core.validators.MaxValueValidator(999)]),
        ),
        migrations.AlterField(
            model_name='container',
            name='temp_min',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(-999), django.core.validators.MaxValueValidator(999)]),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='hum_max',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Humitat màxima (%)'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='hum_min',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Humitat mínima (%)'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='limit',
            field=models.PositiveIntegerField(verbose_name='Capacitat màxima'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='name',
            field=models.CharField(default='Nova Sala', max_length=16, verbose_name='Nom'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='quantity',
            field=models.PositiveIntegerField(default=0, verbose_name='Espai ocupat'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='room_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Tancada'), (1, 'Oberta')], default=0, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='Estat'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='temp_max',
            field=models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura màxima (ºC)'),
        ),
        migrations.AlterField(
            model_name='historicalroom',
            name='temp_min',
            field=models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura mínima (ºC)'),
        ),
        migrations.AlterField(
            model_name='room',
            name='hum_max',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Humitat màxima (%)'),
        ),
        migrations.AlterField(
            model_name='room',
            name='hum_min',
            field=models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Humitat mínima (%)'),
        ),
        migrations.AlterField(
            model_name='room',
            name='limit',
            field=models.PositiveIntegerField(verbose_name='Capacitat màxima'),
        ),
        migrations.AlterField(
            model_name='room',
            name='name',
            field=models.CharField(default='Nova Sala', max_length=16, verbose_name='Nom'),
        ),
        migrations.AlterField(
            model_name='room',
            name='quantity',
            field=models.PositiveIntegerField(default=0, verbose_name='Espai ocupat'),
        ),
        migrations.AlterField(
            model_name='room',
            name='room_status',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Tancada'), (1, 'Oberta')], default=0, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='Estat'),
        ),
        migrations.AlterField(
            model_name='room',
            name='temp_max',
            field=models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura màxima (ºC)'),
        ),
        migrations.AlterField(
            model_name='room',
            name='temp_min',
            field=models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)], verbose_name='Temperatura mínima (ºC)'),
        ),
    ]
